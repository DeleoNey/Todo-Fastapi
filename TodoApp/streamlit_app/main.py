import streamlit as st
import requests

API_URL = "http://127.0.0.1:8000"

# ---- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è session_state ----
if "token" not in st.session_state:
    st.session_state["token"] = None
if "page" not in st.session_state:
    st.session_state["page"] = "login"
if "role" not in st.session_state:
    st.session_state["role"] = None
if "edit_todo" not in st.session_state:
    st.session_state["edit_todo"] = None

# st.markdown("""
# <style>
#     body {background-color: #f9f9f9; color: #222;}
#     .stApp {background-color: #ffffff;}
# </style>
# """, unsafe_allow_html=True)
# ---- –°–≤—ñ—Ç–ª–∏–π —Ñ–æ–Ω ----


# ---- –§—É–Ω–∫—Ü—ñ—ó ----
def login():
    st.subheader("üîë –õ–æ–≥—ñ–Ω")
    username = st.text_input("Username", key="login_user")
    password = st.text_input("Password", type="password", key="login_pass")
    if st.button("–£–≤—ñ–π—Ç–∏"):
        response = requests.post(
            f"{API_URL}/auth/token",
            data={"username": username, "password": password},
            headers={"Content-Type": "application/x-www-form-urlencoded"},
        )
        if response.status_code == 200:
            token = response.json()["access_token"]
            st.session_state["token"] = token

            # –æ—Ç—Ä–∏–º—É—î–º–æ —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            headers = {"Authorization": f"Bearer {token}"}
            user_resp = requests.get(f"{API_URL}/users/", headers=headers)
            if user_resp.status_code == 200:
                st.session_state["role"] = user_resp.json()["role"]

            st.success("–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥!")
            st.session_state["page"] = "todos"
            st.rerun()
        else:
            st.error("–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å")


def register():
    st.subheader("üìù –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è")
    username = st.text_input("Username (new)")
    email = st.text_input("Email")
    first_name = st.text_input("First name")
    last_name = st.text_input("Last name")
    password = st.text_input("Password", type="password")
    role = st.selectbox("Role", ["user", "admin"])
    if st.button("–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏"):
        response = requests.post(
            f"{API_URL}/auth/",
            json={
                "username": username,
                "email": email,
                "first_name": first_name,
                "last_name": last_name,
                "password": password,
                "role": role,
            },
        )
        if response.status_code == 201:
            st.success("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä–µ–Ω–∏–π! –¢–µ–ø–µ—Ä —É–≤—ñ–π–¥–∏.")
            st.session_state["page"] = "login"
            st.rerun()
        else:
            st.error(f"–ü–æ–º–∏–ª–∫–∞: {response.text}")


def handle_401(resp):
    if resp.status_code == 401:
        st.session_state["token"] = None
        st.session_state["role"] = None
        st.session_state["page"] = "login"
        st.error("–°–µ—Å—ñ—è –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—å. –£–≤—ñ–π–¥—ñ—Ç—å –∑–Ω–æ–≤—É.")
        st.rerun()


def todos(all_todos=False):
    st.subheader("üìã Todos")
    headers = {"Authorization": f"Bearer {st.session_state['token']}"}

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è todos
    url = f"{API_URL}/todos/"
    if all_todos:
        url = f"{API_URL}/admin/todo"

    resp = requests.get(url, headers=headers)
    handle_401(resp)
    if resp.status_code == 200:
        todos = resp.json()
        for t in todos:
            col1, col2, col3 = st.columns([3,1,1])
            with col1:
                st.write(f"**{t['title']}** ‚Äî {t['description']} | "
                         f"–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç: {t['priority']} | –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {t['complete']}")
            with col2:
                if st.button("üìù –†–µ–¥–∞–≥—É–≤–∞—Ç–∏", key=f"edit_{t['id']}"):
                    st.session_state["edit_todo"] = t
                    st.session_state["page"] = "edit_todo"
                    st.rerun()
            with col3:
                if st.button("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏", key=f"del_{t['id']}"):
                    del_resp = requests.delete(f"{API_URL}/todos/todo/{t['id']}", headers=headers)
                    handle_401(del_resp)
                    if del_resp.status_code == 204:
                        st.success("–í–∏–¥–∞–ª–µ–Ω–æ")
                        st.rerun()
    else:
        st.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ todos")

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ todo (—Ç—ñ–ª—å–∫–∏ –¥–ª—è user)
    if not all_todos:
        st.write("---")
        st.subheader("‚ûï –î–æ–¥–∞—Ç–∏ Todo")
        title = st.text_input("Title")
        description = st.text_area("Description")
        priority = st.slider("Priority", 1, 5, 3)
        complete = st.checkbox("Complete")
        if st.button("–î–æ–¥–∞—Ç–∏"):
            add_resp = requests.post(
                f"{API_URL}/todos/todo",
                json={"title": title, "description": description, "priority": priority, "complete": complete},
                headers=headers
            )
            handle_401(add_resp)
            if add_resp.status_code == 201:
                st.success("Todo –¥–æ–¥–∞–Ω–æ!")
                st.rerun()


def edit_todo():
    headers = {"Authorization": f"Bearer {st.session_state['token']}"}
    t = st.session_state["edit_todo"]
    st.subheader(f"‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ Todo #{t['id']}")

    title = st.text_input("Title", value=t["title"])
    description = st.text_area("Description", value=t["description"])
    priority = st.slider("Priority", 1, 5, t["priority"])
    complete = st.checkbox("Complete", value=t["complete"])

    if st.button("–ó–±–µ—Ä–µ–≥—Ç–∏"):
        upd_resp = requests.put(
            f"{API_URL}/todos/todo/{t['id']}",
            json={"title": title, "description": description, "priority": priority, "complete": complete},
            headers=headers
        )
        handle_401(upd_resp)
        if upd_resp.status_code == 204:
            st.success("Todo –æ–Ω–æ–≤–ª–µ–Ω–æ!")
            st.session_state["page"] = "todos"
            st.rerun()


def profile():
    st.subheader("üë§ –ü—Ä–æ—Ñ—ñ–ª—å")
    headers = {"Authorization": f"Bearer {st.session_state['token']}"}
    resp = requests.get(f"{API_URL}/users/", headers=headers)
    handle_401(resp)
    if resp.status_code == 200:
        st.json(resp.json())
    else:
        st.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å")


# ---- –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è ----
def main():
    st.title("‚úÖ Todo App (FastAPI + Streamlit)")

    if st.session_state["token"]:
        # —Ñ–æ—Ä–º—É—î–º–æ –º–µ–Ω—é –¥–ª—è —É–≤—ñ–π—à–ª–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        menu = ["Todos", "Profile", "Logout"]
        if st.session_state.get("role") == "admin":
            menu.insert(1, "Admin Panel")

        # –∑–∞—Ö–∏—Å—Ç –≤—ñ–¥ ValueError: —è–∫—â–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–µ –≤ –º–µ–Ω—é, —Å—Ç–∞–≤–∏–º–æ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        if st.session_state.get("page") not in menu:
            st.session_state["page"] = "Todos"

        choice = st.sidebar.radio("–ú–µ–Ω—é", menu, index=menu.index(st.session_state["page"]))

        # –æ–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É
        if choice == "Todos":
            st.session_state["page"] = "Todos"
            todos()
        elif choice == "Admin Panel":
            st.session_state["page"] = "Admin Panel"
            todos(all_todos=True)
        elif choice == "Profile":
            st.session_state["page"] = "Profile"
            profile()
        elif choice == "Logout":
            st.session_state["token"] = None
            st.session_state["role"] = None
            st.session_state["page"] = "Login"
            st.rerun()

    else:
        # –º–µ–Ω—é –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        menu = ["Login", "Register"]
        if st.session_state.get("page") not in menu:
            st.session_state["page"] = "Login"

        choice = st.sidebar.radio("–ú–µ–Ω—é", menu, index=menu.index(st.session_state["page"]))

        if choice == "Login":
            st.session_state["page"] = "Login"
            login()
        elif choice == "Register":
            st.session_state["page"] = "Register"
            register()

    # –æ–∫—Ä–µ–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è todo
    if st.session_state.get("page") == "edit_todo":
        edit_todo()

if __name__ == "__main__":
    main()
